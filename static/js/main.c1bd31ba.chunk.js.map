{"version":3,"sources":["Sample.tsx","Input.tsx","wordEmiter.ts","App.tsx","index.tsx"],"names":["Sample","word","Input","onChange","value","placeholder","randomWord","index","Math","floor","random","words","length","App","useState","wordEmiter","setWord","input","setInput","e","newValue","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAIe,SAASA,EAAT,GAEE,IADfC,EACc,EADdA,KAEA,OACE,8BAAMA,EAAK,KCDA,SAASC,EAAT,GAGC,IAFdC,EAEa,EAFbA,SACAC,EACa,EADbA,MAEA,OACE,uBAAOA,MAAOA,EAAOD,SAAUA,EAAUE,YAAY,qD,WCV1C,SAASC,IACtB,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWC,EAAMC,QAC/C,OAAOD,EAAMJ,GCuBAM,MAtBf,WAAgB,IAAD,EACWC,mBAASC,KADpB,mBACNd,EADM,KACAe,EADA,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAcb,OACE,gCACE,cAAClB,EAAD,CAAQC,KAAMA,IACd,cAACC,EAAD,CAAOE,MAAOa,EAAOd,SAbzB,SAA2BgB,GACzB,IAAMC,EAAWD,EAAEE,OAAOjB,MAC1Bc,EAASE,GACIA,IAAanB,EAAK,KAE7Be,EAAQD,KACRG,EAAS,Y,YCTfI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c1bd31ba.chunk.js","sourcesContent":["interface SampleProps {\n  word: [string, number]\n}\n\nexport default function Sample({\n  word\n}: SampleProps) {\n  return (\n    <div>{word[0]}</div>\n  )\n}\n","import { ChangeEvent } from \"react\";\n\ninterface InputProps {\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void\n  value: string\n}\n\nexport default function Input({\n  onChange,\n  value\n}: InputProps) {\n  return (\n    <input value={value} onChange={onChange} placeholder=\"请输入上面的文本\" />\n  )\n}","import words from './THUOCL_IT.json';\n\nexport default function randomWord() {\n  const index = Math.floor(Math.random() * words.length)\n  return words[index] as [string, number]\n}","import Sample from './Sample'\nimport Input from './Input'\nimport wordEmiter from './wordEmiter'\nimport { ChangeEvent, useState } from 'react'\n\nfunction App() {\n  const [word, setWord] = useState(wordEmiter())\n  const [input, setInput] = useState('')\n  \n  function handleInputChange(e: ChangeEvent<HTMLInputElement>) {\n    const newValue = e.target.value\n    setInput(newValue)\n    const isEq = newValue === word[0]\n    if (isEq) {\n      setWord(wordEmiter())\n      setInput('')\n    }\n  }\n\n  return (\n    <div>\n      <Sample word={word} />\n      <Input value={input} onChange={handleInputChange} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'reset.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}